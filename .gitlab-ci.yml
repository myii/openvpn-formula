---
###############################################################################
# Define all YAML node anchors
###############################################################################
.node_anchors:
  # `stage`
  stage_lint: &stage_lint 'lint'
  stage_release: &stage_release 'release'
  stage_test: &stage_test 'test'
  # `image`
  image_commitlint: &image_commitlint 'myii/ssf-commitlint:11'
  image_docker: &image_docker 'docker:latest'
  image_node: &image_node 'node:12-buster-slim'
  image_precommit: &image_precommit
    name: 'fxinnovation/pre-commit:latest'
    entrypoint: ['/bin/bash', '-c']
  # `before_script`
  before_script_image_node: &before_script_image_node
    - 'apt-get update
       && apt-get install -y --no-install-recommends git-core ca-certificates'
  # `only` (also used for `except` where applicable)
  only_branch_master: &only_branch_master ['master']

###############################################################################
# Define stages and global variables
###############################################################################
stages:
  - *stage_lint
  # - *stage_test
  - *stage_release
variables:
  DOCKER_DRIVER: 'overlay2'

###############################################################################
# `lint` stage: `pre-commit` & `commitlint`
###############################################################################
commitlint:
  stage: *stage_lint
  image: *image_commitlint
  script:
    # Add `upstream` remote to get access to `upstream/master`
    - 'git remote add upstream ${CI_PROJECT_URL}.git'
    - 'git fetch --all'
    # Run `commitlint`
    - 'commitlint --from "$(git merge-base upstream/master HEAD)"
                  --to   "${CI_COMMIT_SHA}"
                  --verbose'

# pre-commit:
#   stage: *stage_lint
#   image: *image_precommit
#   # https://pre-commit.com/#gitlab-ci-example
#   variables:
#     PRE_COMMIT_HOME: '${CI_PROJECT_DIR}/.cache/pre-commit'
#   cache:
#     key: '${CI_JOB_NAME}'
#     paths:
#       - '${PRE_COMMIT_HOME}'
#   before_script:
#     - 'export'
#     # Install all required packages
#     - 'apk update
#        && apk add ruby-full shellcheck'
#   script:
#     - 'pre-commit run --all-files --color always --verbose'

# ###############################################################################
# # Define `test` template
# ###############################################################################
# .test_instance:
#   stage: *stage_test
#   image: *image_docker
#   # https://forum.gitlab.com/t/gitlab-com-ci-caching-rubygems/5627/3
#   # https://bundler.io/v1.16/bundle_config.html
#   variables:
#     BUNDLE_CACHE_PATH: '${CI_PROJECT_DIR}/.cache/bundler'
#     BUNDLE_WITHOUT: 'production'
#   cache:
#     key: '${CI_JOB_STAGE}'
#     paths:
#       - '${BUNDLE_CACHE_PATH}'
#   services:
#     - 'docker:dind'
#   before_script:
#     # - 'export'
#     - 'apk update
#        && apk add git ruby-full ruby-dev make cmake gcc g++ libc-dev'
#     - 'gem install bundler'
#     # TODO: This should work from the env vars above automatically
#     # - 'bundle install --path=${BUNDLE_CACHE_PATH} --without=${BUNDLE_WITHOUT}'
#     - 'bundle config'
#     - 'bundle config set path "${BUNDLE_CACHE_PATH}"'
#     - 'bundle config set without "${BUNDLE_WITHOUT}"'
#     - 'bundle config'
#     - 'bundle install'
#     # - 'find / -type d -name bundler'
#     # - 'ls -al "${BUNDLE_CACHE_PATH}"'
#   script:
#     # Other options include:
#     # - ${CI_BUILD_NAME}
#     # - ${CI_JOB_NAME}
#     # - ${DOCKER_ENV_CI_BUILD_NAME}
#     - 'bin/kitchen verify "${DOCKER_ENV_CI_JOB_NAME}"'

# ###############################################################################
# # `test` stage: `...`
# ###############################################################################
# ## Define the rest of the matrix based on Kitchen testing
# # Make sure the instances listed below match up with
# # the `platforms` defined in `kitchen.yml`
# # default-debian-10-tiamat-py3: {extends: '.test_instance'}
# # default-debian-9-tiamat-py3: {extends: '.test_instance'}
# # default-ubuntu-2004-tiamat-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-tiamat-py3: {extends: '.test_instance'}
# # default-ubuntu-1604-tiamat-py3: {extends: '.test_instance'}
# # default-centos-8-tiamat-py3: {extends: '.test_instance'}
# # default-centos-7-tiamat-py3: {extends: '.test_instance'}
# # default-amazonlinux-2-tiamat-py3: {extends: '.test_instance'}
# # default-oraclelinux-8-tiamat-py3: {extends: '.test_instance'}
# # default-oraclelinux-7-tiamat-py3: {extends: '.test_instance'}
# default-debian-10-master-py3: {extends: '.test_instance'}
# # default-debian-9-master-py3: {extends: '.test_instance'}
# default-ubuntu-2004-master-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-master-py3: {extends: '.test_instance'}
# # default-ubuntu-1604-master-py3: {extends: '.test_instance'}
# # default-centos-8-master-py3: {extends: '.test_instance'}
# default-centos-7-master-py3: {extends: '.test_instance'}
# # default-fedora-33-master-py3: {extends: '.test_instance'}
# # default-fedora-32-master-py3: {extends: '.test_instance'}
# # default-fedora-31-master-py3: {extends: '.test_instance'}
# default-opensuse-leap-152-master-py3: {extends: '.test_instance'}
# default-amazonlinux-2-master-py3: {extends: '.test_instance'}
# # default-oraclelinux-8-master-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-latest-master-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-systemd-master-py3: {extends: '.test_instance'}
# # default-debian-10-3002-0-py3: {extends: '.test_instance'}
# # default-debian-9-3002-0-py3: {extends: '.test_instance'}
# # default-ubuntu-2004-3002-0-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-3002-0-py3: {extends: '.test_instance'}
# # default-ubuntu-1604-3002-0-py3: {extends: '.test_instance'}
# # default-centos-8-3002-0-py3: {extends: '.test_instance'}
# # default-centos-7-3002-0-py3: {extends: '.test_instance'}
# # default-fedora-33-3002-0-py3: {extends: '.test_instance'}
# # default-fedora-32-3002-0-py3: {extends: '.test_instance'}
# # default-fedora-31-3002-0-py3: {extends: '.test_instance'}
# # default-opensuse-leap-152-3002-0-py3: {extends: '.test_instance'}
# # default-amazonlinux-2-3002-0-py3: {extends: '.test_instance'}
# # default-oraclelinux-8-3002-0-py3: {extends: '.test_instance'}
# default-oraclelinux-7-3002-0-py3: {extends: '.test_instance'}
# # default-arch-base-latest-3002-0-py3: {extends: '.test_instance'}
# # default-debian-10-3001-1-py3: {extends: '.test_instance'}
# # default-debian-9-3001-1-py3: {extends: '.test_instance'}
# # default-ubuntu-2004-3001-1-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-3001-1-py3: {extends: '.test_instance'}
# # default-ubuntu-1604-3001-1-py3: {extends: '.test_instance'}
# # default-centos-8-3001-1-py3: {extends: '.test_instance'}
# # default-centos-7-3001-1-py3: {extends: '.test_instance'}
# # default-fedora-33-3001-1-py3: {extends: '.test_instance'}
# # default-fedora-32-3001-1-py3: {extends: '.test_instance'}
# # default-fedora-31-3001-1-py3: {extends: '.test_instance'}
# # default-opensuse-leap-152-3001-1-py3: {extends: '.test_instance'}
# # default-amazonlinux-2-3001-1-py3: {extends: '.test_instance'}
# # default-oraclelinux-8-3001-1-py3: {extends: '.test_instance'}
# # default-oraclelinux-7-3001-1-py3: {extends: '.test_instance'}
# # default-arch-base-latest-3001-1-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-latest-3001-1-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-systemd-3001-1-py3: {extends: '.test_instance'}
# # default-debian-10-3000-3-py3: {extends: '.test_instance'}
# # default-debian-9-3000-3-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-3000-3-py3: {extends: '.test_instance'}
# # default-ubuntu-1604-3000-3-py3: {extends: '.test_instance'}
# # default-centos-8-3000-3-py3: {extends: '.test_instance'}
# # default-centos-7-3000-3-py3: {extends: '.test_instance'}
# # default-fedora-31-3000-3-py3: {extends: '.test_instance'}
# # default-opensuse-leap-152-3000-3-py3: {extends: '.test_instance'}
# # default-amazonlinux-2-3000-3-py3: {extends: '.test_instance'}
# # default-oraclelinux-8-3000-3-py3: {extends: '.test_instance'}
# # default-oraclelinux-7-3000-3-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-latest-3000-3-py3: {extends: '.test_instance'}
# # default-gentoo-stage3-systemd-3000-3-py3: {extends: '.test_instance'}
# # default-ubuntu-1804-3000-3-py2: {extends: '.test_instance'}
# # default-ubuntu-1604-3000-3-py2: {extends: '.test_instance'}
# # default-centos-6-3000-3-py2: {extends: '.test_instance'}
# # default-amazonlinux-1-3000-3-py2: {extends: '.test_instance'}
# # default-arch-base-latest-3000-3-py2: {extends: '.test_instance'}

###############################################################################
# `release` stage: `semantic-release`
###############################################################################
semantic-release:
  only: *only_branch_master
  stage: *stage_release
  image: *image_node
  variables:
    MAINTAINER_TOKEN: '${GH_TOKEN}'
    NODE_DEPS_DIR: '${CI_PROJECT_DIR}/node_modules'
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - '${NODE_DEPS_DIR}'
  # before_script: *before_script_image_node
  before_script:
    - 'apt-get update
       && apt-get install -y --no-install-recommends
                             git-core ca-certificates golang python3-pip
                             python3-setuptools python3-wheel'
  script:
    ## Update `AUTHORS.md`
    - 'go get github.com/myii/maintainer'
    - '${HOME}/go/bin/maintainer contributor'

    ## Install all dependencies required for `semantic-release`
    - 'npm install -D @semantic-release/changelog@3
                      @semantic-release/exec@3
                      @semantic-release/git@7'
    - 'npx semantic-release@15.14'
